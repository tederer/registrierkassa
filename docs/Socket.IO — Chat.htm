<!DOCTYPE html>
<html lang="en-US"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="google-site-verification" content="6hwSNwrfOBp3YhFBHWy08L12QeMTLpqNI3LvIB4lZEI">
<title>Socket.IO  —  Chat</title>
<link href="Socket.IO%20%E2%80%94%20Chat-Dateien/css.css" rel="stylesheet" type="text/css">
<link rel="profile" href="http://gmpg.org/xfn/11">
<link rel="pingback" href="http://socket.io/xmlrpc.php">



<link rel="alternate" type="application/rss+xml" title=" » Feed" href="http://socket.io/feed/">
<link rel="alternate" type="application/rss+xml" title=" » Comments Feed" href="http://socket.io/comments/feed/">
<link rel="alternate" type="application/rss+xml" title=" » Chat Comments Feed" href="http://socket.io/get-started/chat/feed/">
		<script src="Socket.IO%20%E2%80%94%20Chat-Dateien/widgets.js" id="twitter-wjs"></script><script src="Socket.IO%20%E2%80%94%20Chat-Dateien/ga.js" async="" type="text/javascript"></script><script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/socket.io\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.5.1"}};
			!function(a,b,c){function d(a){var c,d,e,f=b.createElement("canvas"),g=f.getContext&&f.getContext("2d"),h=String.fromCharCode;if(!g||!g.fillText)return!1;switch(g.textBaseline="top",g.font="600 32px Arial",a){case"flag":return g.fillText(h(55356,56806,55356,56826),0,0),f.toDataURL().length>3e3;case"diversity":return g.fillText(h(55356,57221),0,0),c=g.getImageData(16,16,1,1).data,d=c[0]+","+c[1]+","+c[2]+","+c[3],g.fillText(h(55356,57221,55356,57343),0,0),c=g.getImageData(16,16,1,1).data,e=c[0]+","+c[1]+","+c[2]+","+c[3],d!==e;case"simple":return g.fillText(h(55357,56835),0,0),0!==g.getImageData(16,16,1,1).data[0];case"unicode8":return g.fillText(h(55356,57135),0,0),0!==g.getImageData(16,16,1,1).data[0]}return!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i;for(i=Array("simple","flag","unicode8","diversity"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script><script type="text/javascript" src="Socket.IO%20%E2%80%94%20Chat-Dateien/wp-emoji-release.js"></script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel="stylesheet" id="videojs-plugin-css" href="Socket.IO%20%E2%80%94%20Chat-Dateien/plugin-styles.css" type="text/css" media="all">
<link rel="stylesheet" id="videojs-css" href="Socket.IO%20%E2%80%94%20Chat-Dateien/video-js.css" type="text/css" media="all">
<link rel="stylesheet" id="wpclef-main-css" href="Socket.IO%20%E2%80%94%20Chat-Dateien/main.css" type="text/css" media="all">
<link rel="stylesheet" id="mailchimp-for-wp-checkbox-css" href="Socket.IO%20%E2%80%94%20Chat-Dateien/checkbox.css" type="text/css" media="all">
<link rel="stylesheet" id="socket-io-website-style-css" href="Socket.IO%20%E2%80%94%20Chat-Dateien/style.css" type="text/css" media="all">
<script type="text/javascript" src="Socket.IO%20%E2%80%94%20Chat-Dateien/jquery.js"></script>
<script type="text/javascript" src="Socket.IO%20%E2%80%94%20Chat-Dateien/jquery-migrate.js"></script>
<link rel="https://api.w.org/" href="http://socket.io/wp-json/">
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://socket.io/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://socket.io/wp-includes/wlwmanifest.xml"> 
<meta name="generator" content="WordPress 4.5.1">
<link rel="canonical" href="http://socket.io/get-started/chat/">
<link rel="shortlink" href="http://socket.io/?p=272">
<link rel="alternate" type="application/json+oembed" href="http://socket.io/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fsocket.io%2Fget-started%2Fchat%2F">
<link rel="alternate" type="text/xml+oembed" href="http://socket.io/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fsocket.io%2Fget-started%2Fchat%2F&amp;format=xml">
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-18488944-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>

		<script type="text/javascript"> document.createElement("video");document.createElement("audio");document.createElement("track"); </script>
					<!-- Easy Columns 2.1.1 by Pat Friedl http://www.patrickfriedl.com -->
			<link rel="stylesheet" href="Socket.IO%20%E2%80%94%20Chat-Dateien/easy-columns.css" type="text/css" media="screen, projection">
			<script src="Socket.IO%20%E2%80%94%20Chat-Dateien/button.js" async="" charset="utf-8" type="text/javascript"></script></head>

<body class="page page-id-272 page-child parent-pageid-24 page-template-default group-blog">
<div id="bar"></div>
<div id="page" class="hfeed site">

	<header id="masthead" class="site-header" role="banner">
		<div class="site-branding">
			<h1 class="site-title"><a href="http://socket.io/" rel="home"></a></h1>
			<h2 class="site-description"></h2>
		</div>

		<nav id="site-navigation" class="main-navigation" role="navigation">
			<div id="logo-container"><a href="http://socket.io/" id="logo">socket.io</a></div>
			<div class="menu-menu-container"><ul id="menu-menu" class="menu"><li id="menu-item-6" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-6"><a href="http://socket.io/">Home</a></li>
<li id="menu-item-153" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-153"><a href="http://socket.io/demos/chat/">Demos</a></li>
<li id="menu-item-30" class="menu-item menu-item-type-post_type menu-item-object-page current-page-ancestor menu-item-30"><a href="http://socket.io/get-started/">Get started</a></li>
<li id="menu-item-29" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-29"><a href="http://socket.io/docs/">Docs</a></li>
<li id="menu-item-95" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-95"><a href="http://socket.io/blog/">Blog</a></li>
<li id="menu-item-43" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-43"><a href="http://socket.io/download/">Download v1.4.5</a></li>
<li id="menu-item-972" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-972"><a title="74 users of online of undefined" href="http://slack.socket.io/">Slack<span id="slack-count">74</span></a></li>
</ul></div>      <iframe src="Socket.IO%20%E2%80%94%20Chat-Dateien/github-btn.htm" allowtransparency="true" scrolling="0" id="gh-watchers" frameborder="0" height="20" width="120"></iframe>
		</nav><!-- #site-navigation -->
	</header><!-- #masthead -->

	<div id="content" class="site-content">

	<div id="primary" class="content-area">
		<main id="main" class="site-main" role="main">

			
				
<article id="post-272" class="post-272 page type-page status-publish hentry">
	<div class="entry-content">
		<h1>Get Started: Chat application</h1>
<p>In this guide we’ll create a basic chat application. It requires 
almost no basic prior knowledge of Node.JS or Socket.IO, so it’s ideal 
for users of all knowledge levels.</p>
<h2>Introduction</h2>
<p>Writing a chat application with popular web applications stacks like 
LAMP (PHP) has traditionally been very hard. It involves polling the 
server for changes, keeping track of timestamps, and it’s a lot slower 
than it should be.</p>
<p>Sockets have traditionally been the solution around which most 
realtime chat systems are architected, providing a bi-directional 
communication channel between a client and a server.</p>
<p>This means that the server can <em>push</em> messages to clients. 
Whenever you write a chat message, the idea is that the server will get 
it and push it to all other connected clients.</p>
<h2>The web framework</h2>
<p>The first goal is to setup a simple HTML webpage that serves out a 
form and a list of messages. We’re going to use the Node.JS web 
framework <code>express</code> to this end. Make sure <a href="http://nodejs.org/">Node.JS is installed</a>.</p>
<p>First let’s create a <code>package.json</code> manifest file that describes our project. I recommend you place it in a dedicated empty directory (I’ll call mine <code>chat-example</code>).</p>
<pre><code>{
  "name": "socket-chat-example",
  "version": "0.0.1",
  "description": "my first socket.io app",
  "dependencies": {}
}</code></pre>
<p>Now, in order to easily populate the <code>dependencies</code> with the things we need, we’ll use <code>npm install --save</code>:</p>
<pre><code>npm install --save express@4.10.2</code></pre>
<p>Now that express is installed we can create an <code>index.js</code> file that will setup our application.</p>
<pre><code>var app = require('express')();
var http = require('http').Server(app);

app.get('/', function(req, res){
  res.send('&lt;h1&gt;Hello world&lt;/h1&gt;');
});

http.listen(3000, function(){
  console.log('listening on *:3000');
});</code></pre>
<p>This translates into the following:</p>
<ol>
<li>Express initializes <code>app</code> to be a function handler that you can supply to an HTTP server (as seen in line 2). </li>
<li>We define a route handler <code>/</code> that gets called when we hit our website home.</li>
<li>We make the http server listen on port 3000.</li>
</ol>
<p>If you run <code>node index.js</code> you should see the following:</p>
<p><img src="Socket.IO%20%E2%80%94%20Chat-Dateien/-LsMcTduUg.png" alt=""></p>
<p>And if you point your browser to <code>http://localhost:3000</code>:</p>
<p><img src="Socket.IO%20%E2%80%94%20Chat-Dateien/AOuGSHy7QM.png" alt=""></p>
<h2>Serving HTML</h2>
<p>So far in <code>index.js</code> we’re calling <code>res.send</code> 
and pass it a HTML string. Our code would look very confusing if we just
 placed our entire application’s HTML there. Instead, we’re going to 
create a <code>index.html</code> file and serve it.</p>
<p>Let’s refactor our route handler to use <code>sendFile</code> instead:</p>
<pre><code>app.get('/', function(req, res){
  res.sendFile(__dirname + '/index.html');
});</code></pre>
<p>And populate <code>index.html</code> with the following:</p>
<pre><code>&lt;!doctype html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Socket.IO chat&lt;/title&gt;
    &lt;style&gt;
      * { margin: 0; padding: 0; box-sizing: border-box; }
      body { font: 13px Helvetica, Arial; }
      form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; }
      form input { border: 0; padding: 10px; width: 90%; margin-right: .5%; }
      form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }
      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages li { padding: 5px 10px; }
      #messages li:nth-child(odd) { background: #eee; }
    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;ul id="messages"&gt;&lt;/ul&gt;
    &lt;form action=""&gt;
      &lt;input id="m" autocomplete="off" /&gt;&lt;button&gt;Send&lt;/button&gt;
    &lt;/form&gt;
  &lt;/body&gt;
&lt;/html&gt;</code></pre>
<p>If you restart the process (by hitting Control+C and running <code>node index</code> again) and refresh the page it should look like this:</p>
<p><img src="Socket.IO%20%E2%80%94%20Chat-Dateien/985FgSH2HQ.png" alt=""></p>
<h2>Integrating Socket.IO</h2>
<p>Socket.IO is composed of two parts:</p>
<ul>
<li>A server that integrates with (or mounts on) the Node.JS HTTP Server: <code>socket.io</code></li>
<li>A client library that loads on the browser side: <code>socket.io-client</code></li>
</ul>
<p>During development, <code>socket.io</code> serves the client automatically for us, as we’ll see, so for now we only have to install one module:</p>
<pre><code>npm install --save socket.io</code></pre>
<p>That will install the module and add the dependency to <code>package.json</code>. Now let’s edit <code>index.js</code> to add it:</p>
<pre><code>var app = require('express')();
var http = require('http').Server(app);
var io = require('socket.io')(http);

app.get('/', function(req, res){
  res.sendfile('index.html');
});

io.on('connection', function(socket){
  console.log('a user connected');
});

http.listen(3000, function(){
  console.log('listening on *:3000');
});</code></pre>
<p>Notice that I initialize a new instance of <code>socket.io</code> by passing the <code>http</code> (the HTTP server) object. Then I listen on the <code>connection</code> event for incoming sockets, and I log it to the console.</p>
<p>Now in index.html I add the following snippet before the <code>&lt;/body&gt;</code>:</p>
<pre><code>&lt;script src="/socket.io/socket.io.js"&gt;&lt;/script&gt;
&lt;script&gt;
  var socket = io();
&lt;/script&gt;</code></pre>
<p>That’s all it takes to load the <code>socket.io-client</code>, which exposes a <code>io</code> global, and then connect.</p>
<p>Notice that I’m not specifying any URL when I call <code>io()</code>, since it defaults to trying to connect to the host that serves the page.</p>
<p>If you now reload the server and the website you should see the console print “a user connected”.<br>
Try opening several tabs, and you’ll see several messages:</p>
<p><img src="Socket.IO%20%E2%80%94%20Chat-Dateien/F5EBcTVDcd.png" alt=""></p>
<p>Each socket also fires a special <code>disconnect</code> event:</p>
<pre><code>io.on('connection', function(socket){
  console.log('a user connected');
  socket.on('disconnect', function(){
    console.log('user disconnected');
  });
});</code></pre>
<p>Then if you refresh a tab several times you can see it in action:</p>
<p><img src="Socket.IO%20%E2%80%94%20Chat-Dateien/bOmy6xrJmi.png" alt=""></p>
<h2>Emitting events</h2>
<p>The main idea behind Socket.IO is that you can send and receive any 
events you want, with any data you want. Any objects that can be encoded
 as JSON will do, and <a href="http://socket.io/blog/introducing-socket-io-1-0/#binary">binary data</a> is supported too.</p>
<p>Let’s make it so that when the user types in a message, the server gets it as a <code>chat message</code> event. The <code>script</code>s section in <code>index.html</code> should now look as follows:</p>
<pre><code>&lt;script src="/socket.io/socket.io.js"&gt;&lt;/script&gt;
&lt;script src="http://code.jquery.com/jquery-1.11.1.js"&gt;&lt;/script&gt;
&lt;script&gt;
  var socket = io();
  $('form').submit(function(){
    socket.emit('chat message', $('#m').val());
    $('#m').val('');
    return false;
  });
&lt;/script&gt;</code></pre>
<p>And in <code>index.js</code> we print out the <code>chat message</code> event:</p>
<pre><code>io.on('connection', function(socket){
  socket.on('chat message', function(msg){
    console.log('message: ' + msg);
  });
});</code></pre>
<p>The result should be like the following video:</p>
<p><video autoplay="autoplay" loop="" width="100%"><source src="Socket.IO%20%E2%80%94%20Chat-Dateien/zboNrGSsai.mp4"></video></p>
<h2>Broadcasting</h2>
<p>The next goal is for us to emit the event from the server to the rest of the users.</p>
<p>In order to send an event to everyone, Socket.IO gives us the <code>io.emit</code>:</p>
<pre><code>io.emit('some event', { for: 'everyone' });</code></pre>
<p>If you want to send a message to everyone except for a certain socket, we have the <code>broadcast</code> flag:</p>
<pre><code>io.on('connection', function(socket){
  socket.broadcast.emit('hi');
});</code></pre>
<p>In this case, for the sake of simplicity we’ll send the message to everyone, including the sender.</p>
<pre><code>io.on('connection', function(socket){
  socket.on('chat message', function(msg){
    io.emit('chat message', msg);
  });
});</code></pre>
<p>And on the client side when we capture a <code>chat message</code> event we’ll include it in the page. The total client-side JavaScript code now amounts to:</p>
<pre><code>&lt;script&gt;
  var socket = io();
  $('form').submit(function(){
    socket.emit('chat message', $('#m').val());
    $('#m').val('');
    return false;
  });
  socket.on('chat message', function(msg){
    $('#messages').append($('&lt;li&gt;').text(msg));
  });
&lt;/script&gt;</code></pre>
<p>And that completes our chat application, in about 20 lines of code! This is what it looks like:</p>
<p><video autoplay="autoplay" loop="" width="100%"><source src="Socket.IO%20%E2%80%94%20Chat-Dateien/J4xwRU9DRn.mp4"></video></p>
<h2>Homework</h2>
<p>Here are some ideas to improve the application:</p>
<ul>
<li>Broadcast a message to connected users when someone connects or disconnects</li>
<li>Add support for nicknames</li>
<li>Don’t send the same message to the user that sent it himself. Instead, append the message directly as soon as he presses enter.</li>
<li>Add “{user} is typing” functionality</li>
<li>Show who’s online</li>
<li>Add private messaging</li>
<li>Share your improvements!</li>
</ul>
<h2>Getting this example</h2>
<p>You can find it on GitHub <a href="https://github.com/guille/chat-example">here</a>.</p>
<pre><code>$ git clone https://github.com/guille/chat-example.git</code></pre>
			</div><!-- .entry-content -->
	<footer class="entry-footer">
			</footer><!-- .entry-footer -->
</article><!-- #post-## -->

			
		</main><!-- #main -->
	</div><!-- #primary -->


	</div><!-- #content -->

	<footer id="colophon" class="site-footer" role="contentinfo">
		<div class="site-info">
			<span class="footer-left">SOCKET.IO IS OPEN-SOURCE (MIT). RUN BY <a href="https://github.com/Automattic/socket.io/graphs/contributors">CONTRIBUTORS</a>. </span>
      <span class="footer-right">
        <iframe data-screen-name="socketio" src="Socket.IO%20%E2%80%94%20Chat-Dateien/follow_button.htm" title="Twitter Follow Button" style="position: static; visibility: visible; width: 206px; height: 20px;" class="twitter-follow-button twitter-follow-button-rendered" allowtransparency="true" scrolling="no" id="twitter-widget-0" frameborder="0"></iframe>
      </span>
		</div><!-- .site-info -->
	</footer><!-- #colophon -->
</div><!-- #page -->


<script type="text/javascript" src="Socket.IO%20%E2%80%94%20Chat-Dateien/javascripts.js"></script>
<script type="text/javascript" src="Socket.IO%20%E2%80%94%20Chat-Dateien/wp-embed.js"></script>


<script src="Socket.IO%20%E2%80%94%20Chat-Dateien/jquery-1.js"></script>
<script src="Socket.IO%20%E2%80%94%20Chat-Dateien/socket.js"></script>
<!-- Twitter script -->
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

<script>
(function() {
  var slack_users_count = 78;
  var count = $('<span id="slack-count">').text(slack_users_count);
  var socket = io('http://slack.socket.io');
  $('#menu-item-972 a').append(count);

  socket.on('active', function(val, total){
    var old = Number(count.text());
    count.text(val);
    $('#menu-item-972 a').attr('title', val + ' users of online of ' + total);

    if (val > old) {
      count.removeClass().addClass('animated bounce').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function(){
        $(this).removeClass();
      });
    }

    $('.slack-users-count').text(val);
    $('.slack-users-count-total').text(total);
  });
})();
</script>









<iframe style="position: absolute; visibility: hidden; display: none; width: 0px; height: 0px; padding: 0px; border: medium none;" allowfullscreen="true" allowtransparency="true" scrolling="no" id="rufous-sandbox" frameborder="0"></iframe></body></html>
<!-- Dynamic page generated in 0.056 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2016-06-24 06:33:25 -->
<!-- super cache -->